<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "SS7_Stack_User_Guide.ent">
%BOOK_ENTITIES;
]>

<chapter id="simulator">

	<title>SS7 Simulator</title>

	<para>
		SS7 Simulator is an application for testing the &THIS.PLATFORM; &THIS.APPLICATION; and understanding its functionality. The test cases will allow you to conduct various test scenarios and explore the Stack. The Simulator is also a good example of how to use this Stack. For details on installing the Simulator please refer to the Installation Guide. To know more about Running the Simulator please refer to <xref linkend="running_ss7_simulator"/> in this guide.
	</para>
	<para>
		Before running a test all relevant layers of the Simulator must be configured. After running a test, you can perform some actions depending on the test. The results of the test are emitted as "notifications". Notifications are displayed in the GUI interface of the Simulator and JConsole application (which is also a GUI interface). Notifications are also written into a file "&lt;host name&gt;.log" (for example "a1.log") as well as printed onto a console.
	</para>	
<section id="simulator_configuring_layers">
		<title>Configuring &THIS.PLATFORM; &THIS.APPLICATION; Simulator 
		</title>
		<para>You must configure all relevant layers and the Testing Task prior to running a test with the Simulator. For details on how to launch the form for configuring the simulator, refer to <xref linkend="procedure_test_simulator"/>.</para>
	<section id="simulator_configuring_layers_sccp">
		<title>SCCP Layer of the Simulator 
		</title>

	<para>
		SCCP layer supports message processing in two modes:		
			<itemizedlist> 
				<listitem>
					<para>
						Route on DPC and SSN mode
					</para>
				</listitem>
				<listitem>
					<para>
						Route on GlobalTitle mode
					</para>
				</listitem>
			</itemizedlist>
	</para>

	<para>
		For both modes you must set the following options:
			<itemizedlist> 
				<listitem>
					<para>
						Remote SPC
					</para>
				</listitem>
				<listitem>
					<para>
						Local SPC
					</para>
				</listitem>
				<listitem>
					<para>
						Network indicator
					</para>
				</listitem>
				<listitem>
					<para>
						Remote SSN
					</para>
				</listitem>
				<listitem>
					<para>
						Local SSN
					</para>
				</listitem>
			</itemizedlist>
	</para>

	<para>
		When the SCCP layer is started, the following are created:
			<itemizedlist> 
				<listitem>
					<para>
						Mtp3ServiceAccessPoint (using Local SPC and Network indicator)
						with a single Mtp3Destination (Remote SPC, all SLS's)
					</para>
				</listitem>
				<listitem>
					<para>
						RemoteSpc (using Remote SPC)
					</para>
				</listitem>
				<listitem>
					<para>
						RemoteSsn (using Remote SPC and Remote SSN)
					</para>
				</listitem>
			</itemizedlist>
	</para>

	<para>
		For "Route on GlobalTitle" mode there are few extra options as below:
			<itemizedlist> 
				<listitem>
					<para>
						GlobalTitle type ("Nature of address indicator only", "Translation type only",
						"Translation type, numbering plan and encoding scheme",
						"Translation type, numbering plan, encoding scheme and NOA ind"),
						the last choice is default.
					</para>
				</listitem>
				<listitem>
					<para>
						AddressNature
					</para>
				</listitem>
				<listitem>
					<para>
						NumberingPlan
					</para>
				</listitem>
				<listitem>
					<para>
						Translation type
						(those four options are used for CalledPartyAddress, CallingPartyAddress and routing rules)
					</para>
				</listitem>
				<listitem>
					<para>
						CallingPartyAddress digits
					</para>
				</listitem>
				
			</itemizedlist>
	</para>

	<para>
		If the "Route on GlobalTitle" mode is used, two rules for routing are created when the SCCP layer is started.
		All remotely originated messages are routed to a local user,  All locally originated messages are routed to a remote user (to a peer with Remote SPC address).
	</para>
	<para>
		SCCP layer provide CalledPartyAddress and CallingPartyAddress
		for upper layers and test cases. When "Route on DPC and SSN" mode is used, these are 
		ROUTING_BASED_ON_DPC_AND_SSN with no GlobalTitle, pc=Local SPC (for CallingPartyAddress)
		or Remote SSN (for CalledPartyAddress), SSN=Local SSN and Remote SSN accordingly.
	</para>

	<para>
		When "Route on GlobalTitle" mode ROUTING_BASED_ON_GT is used:
			<itemizedlist> 
				<listitem>
					<para>
						CallingPartyAddress is created based on CallingPartyAddress digits and Local SSN.
					</para>
				</listitem>
				<listitem>
					<para>
						CalledPartyAddress is created using digits and SSN that are supplied by upper levels or test cases.
					</para>
				</listitem>
			</itemizedlist>
	</para>

	<figure>
  		<title>SCCP Settings Form</title>
  		<mediaobject>
    		<imageobject>
      			<imagedata fileref="images/Simulator-Example9.png" format="PNG" align="center"/>
    		</imageobject>
  		</mediaobject>
	</figure>
	</section>

	</section>


	<section id="simulator_tests">
		<title>SS7 Simulator Test Cases 
		</title>
	
	<section id="simulator_test_ussdserver">
		<title>USSD Server 
		</title>

	<para>
		UssdServer test can work in manual and automatic modes.
		In the manual mode a user manually inserts the response message value and sends ProcessUnstructuredSs response (or UnstructuredSs request) to the Ussd client.
		In the automatic mode UssdServer automatically sends a predefined message as an ProcessUnstructuredSs response ("Auto sending ProcessUnstructuredSsResponse" option)
		or automatically sends a predefined message as an UnstructuredSs request and then 
		sends a predefined message ProcessUnstructuredSs response ("Auto sending Unstructured_SS_Request then after response sending ProcessUnstructuredSsResponse" option).
		Use "Auto sending ProcessUnstructuredSsResponse" option for UssdServer if UssdClient is used for a load test ("Auto sending ProcessUnstructuredSSRequest").
		For load tests we recommend to check the option "One notification for 100 dialogs" for preventing too many notifications when load testing. 
	</para>

	<para>
		UssdServer test can perform followng tasks:
			<itemizedlist> 
				<listitem>
					<para>
						Sending a ProcessUnstructuredSs response / UnstructuredSs request in automatic or manual modes.
						Ussd Client must initiate a dialog using ProcessUnstructuredSs request.
					</para>
				</listitem>
				<listitem>
					<para>
						Manually sending an UnstructuredSsNotify. 
					</para>
				</listitem>
			</itemizedlist>
	</para>

	<figure>
  		<title>Ussd Server settings form</title>
  		<mediaobject>
    		<imageobject>
      			<imagedata fileref="images/Simulator-Example8.png" format="PNG" align="center"/>
    		</imageobject>
  		</mediaobject>
	</figure>

	</section>

	<section id="simulator_test_ussdclient">
		<title>USSD Client 
		</title>

	<para>
		UssdClient test can perform following tasks:
			<itemizedlist> 
				<listitem>
					<para>
						Sending a ProcessUnstructuredSs request, waiting for the answer and displaying the answer 
					</para>
				</listitem>
				<listitem>
					<para>
						Sending a UnstructuredSs response as an answer for UnstructuredSs request    
					</para>
				</listitem>
				<listitem>
					<para>
						Receiving UnstructuredSs notify and displaying it
					</para>
				</listitem>
				<listitem>
					<para>
						Special case for load testing: Sending to the Ussd server a flow of ProcessUnstructuredSs requests without stopping (and receiving responses).
					</para>
				</listitem>
			</itemizedlist>
	</para>

	<para>
		For working in the manual mode select the option "Manual operation", for auto sending messages - the option "Auto sending ProcessUnstructuredSSRequest".  
		You can send ProcessUnstructuredSs request and UnstructuredSs response only manually by inserting a message text and 
		pressing buttons.
		For working in the auto mode you should define the string of auto processUnstructuredSs request and the count of maximum active MAP dialogs (default value is 10).
		The more dialogs is defined the more messages per second will be sent.
		Msisdn, data coding schema and alerting pattern values should be also configured before test starting.
		For the auto mode we recomment to check the option "One notification for 100 dialogs" for preventing too many notifications when load testing. 
	</para>

	<para>
		You can send ProcessUnstructuredSs request and UnstructuredSs response manually by inserting a message text and 
		pressing buttons.
		You can not send a new ProcessUnstructiredSs request till the response for previos request has been received (or till dialog timeout).
		You can also manually close the current dialog by pressing "Close current dialog" button.
	</para>

	<figure>
       <title>Ussd Client settings form</title>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/Simulator-Example7.png" format="PNG" align="center"/>
            </imageobject>
        </mediaobject>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/Simulator-Example7_01.png" format="PNG" align="center"/>
            </imageobject>
        </mediaobject>
	</figure>

	</section>

	<section id="simulator_test_smsserver">
		<title>SMS Server 
		</title>

	<para>
		SMS Server simulates the behavior of SMSC, it can:
			<itemizedlist> 
				<listitem>
					<para>
						Send sendRoutingInfoForSM to the HLR and receive the response
					</para>
				</listitem>
				<listitem>
					<para>
						Send mt-forwardSM to the VLR and receive the response 
					</para>
				</listitem>
				<listitem>
					<para>
						Send sendRoutingInfoForSM to the HLR, receive the response and send mt-forwardSM using data from the first request 
					</para>
				</listitem>
				<listitem>
					<para>
						Receive mo-forwardSM request from VLR and display the received message 
					</para>
				</listitem>
			</itemizedlist>
	</para>

	<para>
		We need to set the following options to SMS server:
			<itemizedlist> 
				<listitem>
					<para>
						AddressNature and NumberingPlan for AddressString creation
					</para>
				</listitem>
				<listitem>
					<para>
						TypeOfNumber and NumberingPlanIdentification SMS tpdu addresses
					</para>
				</listitem>
				<listitem>
					<para>
						MAP protocol version (1, 2 or 3) (version 3 is default) 
					</para>
				</listitem>
				<listitem>
					<para>
						Character set for SMS message encoding (GSM7 or UCS2)
					</para>
				</listitem>
				<listitem>
					<para>
						Origination Service center address string (this address must be equal the SCCP layer CallingPartyAddress digits) 
					</para>
				</listitem>
				<listitem>
					<para>
						HLR and VLR SSN values (default values are 8 and 6) 
					</para>
				</listitem>
			</itemizedlist>
	</para>

	<para>
		Remark: if you want to use SMS Server and SMS Client for sending SMS to each other: set HLR SSN at SMS Server the equal value that VLR SSN (8 in our case)
	</para>

	<figure>
  		<title>SMS client settings form</title>
  		<mediaobject>
    		<imageobject>
      			<imagedata fileref="images/Simulator-Example11.png" format="PNG" align="center"/>
    		</imageobject>
  		</mediaobject>
	</figure>

	<para>
		After starting SMS server you can:
			<itemizedlist> 
				<listitem>
					<para>
						For sending sendRoutingInfoForSM ("Send SRIForSM" button) we should set "Destination ISDN number"
					</para>
				</listitem>
				<listitem>
					<para>
						For sending sendRoutingInfoForSM and then mt-forwardSM ("Send SRIForSM + MtForwardSM" button) we should set
						"Message text", "Destination ISDN number" and "Origination ISDN number"
					</para>
				</listitem>
				<listitem>
					<para>
						For sending mt-forwardSM only ("Send MtForwardSM" button) we should set
						"Message text", "IMSI", "VLR number" and "Origination ISDN number" 
					</para>
				</listitem>
			</itemizedlist>
	</para>

	</section>

	<section id="simulator_test_smsclient">
		<title>SMS Client 
		</title>

	<para>
		SMS Client simulates the behavior of HLR or VLR, it can:
			<itemizedlist> 
				<listitem>
					<para>
						Receive sendRoutingInfoForSM from SMSC and send as a response predefined IMSI and VLR number
					</para>
				</listitem>
				<listitem>
					<para>
						Receive mt-forwardSM from SMSC and display the received message
					</para>
				</listitem>
				<listitem>
					<para>
						Send mo-forwardSM to the SMSC 
					</para>
				</listitem>
			</itemizedlist>
	</para>

	<para>
		We need to set the following options to SMS client:
			<itemizedlist> 
				<listitem>
					<para>
						AddressNature and NumberingPlan for AddressString creation
					</para>
				</listitem>
				<listitem>
					<para>
						TypeOfNumber and NumberingPlanIdentification SMS tpdu addresses
					</para>
				</listitem>
				<listitem>
					<para>
						MAP protocol version (1, 2 or 3) (version 3 is default) 
					</para>
				</listitem>
				<listitem>
					<para>
						Character set for SMS message encoding (GSM7 or UCS2) 
					</para>
				</listitem>
				<listitem>
					<para>
						Destination Service center address string (this address must be equal the SCCP layer CallingPartyAddress digits)
					</para>
				</listitem>
				<listitem>
					<para>
						SMSC SSN value (default value is 8) 
					</para>
				</listitem>
				<listitem>
					<para>
						IMSI and VLR addresses values that will be used when responding on sendRoutingInfoForSM 
					</para>
				</listitem>
			</itemizedlist>
	</para>

	<figure>
  		<title>SMS client settings form</title>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/Simulator-Example10.png" format="PNG" align="center"/>
            </imageobject>
        </mediaobject>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/Simulator-Example10_01.png" format="PNG" align="center"/>
            </imageobject>
        </mediaobject>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/Simulator-Example10_02.png" format="PNG" align="center"/>
            </imageobject>
        </mediaobject>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/Simulator-Example10_03.png" format="PNG" align="center"/>
            </imageobject>
        </mediaobject>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/Simulator-Example10_04.png" format="PNG" align="center"/>
            </imageobject>
        </mediaobject>
	</figure>

	<para>
		After starting SMS client you can:
			<itemizedlist> 
				<listitem>
					<para>
						For sending mo-forwardSM ("Send MoForwardSM" button) we should set
						"Message text", "Destination ISDN number" and "Origination ISDN number"
					</para>
				</listitem>
				<listitem>
					<para>
						When recieving sendRoutingInfoForSM client automatically generate a response with preconfigured IMSI and VLR address 						
					</para>
				</listitem>
			</itemizedlist>
	</para>

	</section>

    <section id="simulator_test_cap_scf">
        <title>CAMEL SCF part
        </title>

    <para>
        CAMEL SCF part simulates the behavior of CAMEL Service Control Function, it can:
            <itemizedlist> 
                <listitem>
                    <para>
                        Send InitiateCallAttempt message to CAMEL SSF
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Send ApplyCharging message to CAMEL SSF
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Send Cancel message to CAMEL SSF
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Send Connect message to CAMEL SSF
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Send Continue message to CAMEL SSF
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Send ReleaseCall message to CAMEL SSF
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Send RequestReportBCSMEvent message to CAMEL SSF
                    </para>
                </listitem>
            </itemizedlist>
    </para>

    <para>
        We need to set the following options to CAMEL SCF:
            <itemizedlist> 
                <listitem>
                    <para>
                        CAP Apllication content
                    </para>
                </listitem>
            </itemizedlist>
        Parameters of messages are hardcorded in current version and can not be configured.
    </para>

    <figure>
        <title>CAMEL SCF settings form</title>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/Simulator-Example12.png" format="PNG" align="center"/>
            </imageobject>
        </mediaobject>
    </figure>

    <para>
        After CAMEL SCF server starting you can:
            <itemizedlist> 
                <listitem>
                    <para>
                        For initiating of CAP dialog and sending InitiateCallAttempt - press "InitiateCallAttempt" button.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        For continuing of CAP dialog with sending ApplyCharging, Cancel, Connect, Continue, ReleaseCall or RequestReportBCSMEvent - press corresponded buttons.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        For ending of CAP dialog - press "Close Dialog" button.
                    </para>
                </listitem>
            </itemizedlist>
    </para>

    </section>

    <section id="simulator_test_cap_ssf">
        <title>CAMEL SSF part
        </title>

    <para>
        CAMEL SSF part simulates the behavior of CAMEL Service Switching Function, it can:
            <itemizedlist> 
                <listitem>
                    <para>
                        Send InitialDP message to CAMEL SCF
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Send AssistRequestInstructions message to CAMEL SCF
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Send ApplyChargingReport message to CAMEL SCF
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Send EventReportBCSM message to CAMEL SCF
                    </para>
                </listitem>
            </itemizedlist>
    </para>

    <para>
        We need to set the following options to CAMEL SSF:
            <itemizedlist> 
                <listitem>
                    <para>
                        CAP Apllication content
                    </para>
                </listitem>
            </itemizedlist>
        Parameters of messages are hardcorded in current version and can not be configured.
    </para>

    <figure>
        <title>CAMEL SSF settings form</title>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/Simulator-Example13.png" format="PNG" align="center"/>
            </imageobject>
        </mediaobject>
    </figure>

    <para>
        After CAMEL SSF server starting you can:
            <itemizedlist> 
                <listitem>
                    <para>
                        For initiating of CAP dialog and sending InitialDP or AssistRequestInstructions message - press corresponded button.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        For continuing of CAP dialog with sending ApplyChargingReport or EventReportBCSM - press corresponded buttons.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        For ending of CAP dialog - press "Close Dialog" button.
                    </para>
                </listitem>
            </itemizedlist>
    </para>

    </section>

    <section id="simulator_test_atiserver">
        <title>ATI Server 
        </title>

    <para>
        ATI operation server task can be used for responding for AniTimeInterrogation MAP request.
        There are no configurable options for this mode now. SS7 Simulator will auto respond with ARI response with hardcoded parameters.
    </para>

    <para>
        ATI Server test can perform followng tasks:
            <itemizedlist> 
                <listitem>
                    <para>
                        Auto sending of ATI Response.
                    </para>
                </listitem>
            </itemizedlist>
    </para>

    </section>

    <section id="simulator_test_aticlient">
        <title>ATI Client 
        </title>

    <para>
        ATI Client test can perform following tasks:
            <itemizedlist> 
                <listitem>
                    <para>
                        Sending a AnyTimeInterrogation MAP (ATI) request and displaying of ATI response. 
                    </para>
                </listitem>
            </itemizedlist>
    </para>

    <para>
        For sending of ATI Request we need to specify IMSI / MSISDN digits and push "Send ATI Request" button. 
    </para>

    <para>
        Before running of ATI Client a user need to specify parameters:
            <itemizedlist> 
                <listitem>
                    <para>
                        Subscriber identity type (IMSI / MSISDN (default)). 
                    </para>
                </listitem>
                <listitem>
                    <para>
                        AddressNature and NumberingPlan for AddressString Creation. 
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Requested info - which parameters will be requested from ATI server. 
                    </para>
                </listitem>
                <listitem>
                    <para>
                        GSM SCF address digits. 
                    </para>
                </listitem>
            </itemizedlist>
    </para>

    <figure>
       <title>ATI Client settings form</title>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/Simulator-Example14.png" format="PNG" align="center"/>
            </imageobject>
        </mediaobject>
    </figure>

    </section>



	</section>

</chapter>

